version: 2.1

executors:
  multiimage:
    docker:
      - image: cimg/base:current
      - image: postgres:13.10
        environment:
          POSTGRES_DB: wiki
          POSTGRES_USER: Free
          POSTGRES_PASSWORD: Willy
      - image: redis:7.4-rc-alpine
    resource_class: large

commands:
  inspect-container-network:
    parameters:
      image-tag:
        type: string
        description: image:tag to look up container (via ancestor filter)
    steps:
      - run:
          name: inspect << parameters.image-tag >>
          command: |
            CNTR_ID=$(docker container ls --filter="ancestor=<< parameters.image-tag >>" --quiet)
            docker container inspect $CNTR_ID | jq -r ".[0].NetworkSettings.Networks"

jobs:
  multiimage:
    executor: multiimage
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker ps
      - run: docker network ls
      - inspect-container-network:
          image-tag: "cimg/base:current"
      - inspect-container-network:
          image-tag: "postgres:13.10"
      - inspect-container-network:
          image-tag: "redis:7.4-rc-alpine"
      - run:
          name: find pause container
          command: |
            CNTR_ID_PAUSE=$(docker container ls --filter="ancestor=public.ecr.aws/eks-distro/kubernetes/pause:3.6" --quiet)
            echo "export CNTR_ID_PAUSE=${CNTR_ID_PAUSE}" >> $BASH_ENV
      - run:
          name: test connection to Postgres
          command: |
            dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - run:
          name: test connection to Redis
          command: |
            dockerize -wait tcp://127.0.0.1:6379 -timeout 1m

workflows:
  explore:
    jobs:
      - multiimage
